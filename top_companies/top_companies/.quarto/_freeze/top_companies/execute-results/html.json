{
  "hash": "e355b1b84b9428606ddf8905fc6b2bcf",
  "result": {
    "markdown": "---\nsubtitle: \"**Analyzing Top Companies in the World with Python and Pandas**\"\ntitle: \"Unveiling Corporate Titans: Navigating Global Business Landscapes through Python Data Analysis\"\nauthor:\n  - name: John Karuitha\n    orcid: 0000-0002-8204-7034\n    email: jkaruitha@karu.ac.ke\n    affiliations:\n      - name: Karatina University, School of Business\n        address: P.O. Box 1957-00100\n        city: Karatina\n        state: Kenya\n        postal-code: 10101\n      - name: Graduate School of Business Administration, University of the Witwatersrand\n        address: 2nd St Davids Pl & St Andrew Rd, Parktown\n        city: Johannesburg\n        state: South Africa\n        postal-code: 2193\ntitle-block-banner: \"images.jpeg\"\nself-contained: true\ndate: today\ndate-modified: today\ndate-format: long\nformat: \n  html:\n    theme: cerulean\n    toc: true\n    toc-depth: 3\n    number-sections: true\n    number-depth: 3\n    smooth-scroll: true\n    code-fold: false\nexecute: \n  message: false\n  warning: false\n  echo: fenced\nbibliography: references.bib\ncsl: apa.csl\n---\n\n# **Background**\n\nIn this analysis, we use data from Kagle[@top2000companies] to illustrate the use of Python and Pandas in data analysis[@vanderplas2016python]. The data captures the top 2000 companies in the world and is available for free upon registration on the [Kagle website](https://www.kaggle.com/datasets/joebeachcapital/top-2000-companies-globally).\n\n# **Objectives**\n\nThe primary goal of this exercise is to illustrate how to use Python, pandas and other libraries in Python programming to analyse data for meaningful insights.\n\nSpecifically, we seek to;\n\n1.  Rank companies by their performance. \n2.  Rank countries and continents based on the concentration of large companies.\n2.  Compute the correlation between company size (in terms of assets) and financial performance.\n3.  Uncover regional patterns in company performance based on continent.\n4.  Establish the companies, continents with the highest returns on assets and profit margins.\n\n# **Summary of Results**\n\n1.  Most large companies in the sample are located in the United States.\n2.  The continent with the highest number of large companies is Asia.\n3.  There is a positive relationship between company size and financial performance (sales, profits, market value). However, this relationship varies across continents.\n4.  Companies from North America and Asia have the highest sales and profits.\n5.  Companies from Europe and Asia have the highest asset base.\n6.  Companies in Africa and North America are more efficient in converting sales and assets into profits.\n\n::: callout-tip\nPlease visit my \\[rpubs site\\](www.rpubs.com/Karuitha) to see more data projects. Alternatively, copy and paste the link \\<www.rpubs.com/Karuitha\\> into your browser. You can also view my \\[linkedin\\](www.linkedin.com/in/Karuitha) site for my skills and education.\n\nMy \\[Tableau public profile\\](https://public.tableau.com/app/profile/john.karuitha) contains my data visualizations.\n\nMy Shiny web apps are available on this \\[site\\](<https://karuitha.shinyapps.io/>). You can copy-paste this web address instead <https://karuitha.shinyapps.io/>\n:::\n\nSkills & Technologies Applied: Python, Pandas, Geopandas, Matplotlib, Quarto, Data Science.\n\n# **Data**\n\nThe data is available on [kagle](https://www.kaggle.com/datasets/joebeachcapital/top-2000-companies-globally) as a csv file (registration is required to access the data). I start by loading the necessary packages for the analysis: pandas, numpy, matplotlib, and seaborn [@borjigin2023].\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport geopandas as gpd\nfrom shapely.geometry import Point\n```\n:::\n\n\nNext I read in the data using pandas and set the index column as the name of the company given it is a unique and meaningful identifier.\n\n::: {.cell execution_count=2}\n```` { .cell-code}\n```{{python}}\ncompany = pd.read_csv(\"Top2000CompaniesGlobally.csv\", \nindex_col = \"Company\")\n\ncompany.columns\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\nIndex(['Global Rank', 'Sales ($billion)', 'Profits ($billion)',\n       'Assets ($billion)', 'Market Value ($billion)', 'Country', 'Continent',\n       'Latitude', 'Longitude'],\n      dtype='object')\n```\n:::\n:::\n\n\nNext, I rename the columns using names that are easier to work with. I create a dictionary of old names versus new names and then rename the columns.\n\n::: {.cell execution_count=3}\n```` { .cell-code}\n```{{python}}\n## Create a dictionary of old names vs new names\nnames = {'Global Rank':'rank', \n'Sales ($billion)':'sales', \n'Profits ($billion)':'profits',\n'Assets ($billion)':'assets', \n'Market Value ($billion)':'market_value', \n'Country':'country', \n'Continent':'continent',\n'Latitude':'latitude', \n'Longitude':'longitude'}\n\n# Rename the columns in place\ncompany.rename(columns = names, inplace = True)\n```\n\n````\n:::\n\n\n# **Data Exploration**\n\nWe now explore the data.\n\n## Number of rows and columns\n\nWe start with the number of rows and columns in the data.\n\n::: {.cell execution_count=4}\n```` { .cell-code}\n```{{python}}\ncompany.shape\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n(1924, 9)\n```\n:::\n:::\n\n\nWe see that the data has 1924 rows (records) and 9 columns (variables).\n\n## First and Last Rows of the Data\n\nNext, lets examine the first 5 rows.\n\n::: {.cell execution_count=5}\n```` { .cell-code}\n```{{python}}\ncompany.head(5)\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>rank</th>\n      <th>sales</th>\n      <th>profits</th>\n      <th>assets</th>\n      <th>market_value</th>\n      <th>country</th>\n      <th>continent</th>\n      <th>latitude</th>\n      <th>longitude</th>\n    </tr>\n    <tr>\n      <th>Company</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>ICBC</th>\n      <td>1</td>\n      <td>134.8</td>\n      <td>37.8</td>\n      <td>2813.5</td>\n      <td>237.3</td>\n      <td>China</td>\n      <td>Asia</td>\n      <td>35.86166</td>\n      <td>104.195397</td>\n    </tr>\n    <tr>\n      <th>China Construction Bank</th>\n      <td>2</td>\n      <td>113.1</td>\n      <td>30.6</td>\n      <td>2241.0</td>\n      <td>202.0</td>\n      <td>China</td>\n      <td>Asia</td>\n      <td>35.86166</td>\n      <td>104.195397</td>\n    </tr>\n    <tr>\n      <th>JPMorgan Chase</th>\n      <td>3</td>\n      <td>108.2</td>\n      <td>21.3</td>\n      <td>2359.1</td>\n      <td>191.4</td>\n      <td>USA</td>\n      <td>North America</td>\n      <td>37.09024</td>\n      <td>-95.712891</td>\n    </tr>\n    <tr>\n      <th>General Electric</th>\n      <td>4</td>\n      <td>147.4</td>\n      <td>13.6</td>\n      <td>685.3</td>\n      <td>243.7</td>\n      <td>USA</td>\n      <td>North America</td>\n      <td>37.09024</td>\n      <td>-95.712891</td>\n    </tr>\n    <tr>\n      <th>Exxon Mobil</th>\n      <td>5</td>\n      <td>420.7</td>\n      <td>44.9</td>\n      <td>333.8</td>\n      <td>400.4</td>\n      <td>USA</td>\n      <td>North America</td>\n      <td>37.09024</td>\n      <td>-95.712891</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nWe also check the last 7 rows.\n\n::: {.cell execution_count=6}\n```` { .cell-code}\n```{{python}}\ncompany.tail(7)\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>rank</th>\n      <th>sales</th>\n      <th>profits</th>\n      <th>assets</th>\n      <th>market_value</th>\n      <th>country</th>\n      <th>continent</th>\n      <th>latitude</th>\n      <th>longitude</th>\n    </tr>\n    <tr>\n      <th>Company</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Health Net</th>\n      <td>1993</td>\n      <td>11.3</td>\n      <td>0.1</td>\n      <td>3.9</td>\n      <td>2.3</td>\n      <td>USA</td>\n      <td>North America</td>\n      <td>37.090240</td>\n      <td>-95.712891</td>\n    </tr>\n    <tr>\n      <th>Bank of Saga</th>\n      <td>1994</td>\n      <td>0.5</td>\n      <td>0.0</td>\n      <td>25.0</td>\n      <td>0.4</td>\n      <td>Japan</td>\n      <td>Asia</td>\n      <td>36.204824</td>\n      <td>138.252924</td>\n    </tr>\n    <tr>\n      <th>Tractor Supply</th>\n      <td>1995</td>\n      <td>4.7</td>\n      <td>0.3</td>\n      <td>1.7</td>\n      <td>7.1</td>\n      <td>USA</td>\n      <td>North America</td>\n      <td>37.090240</td>\n      <td>-95.712891</td>\n    </tr>\n    <tr>\n      <th>San-Ai Oil</th>\n      <td>1996</td>\n      <td>0.5</td>\n      <td>0.1</td>\n      <td>25.7</td>\n      <td>0.5</td>\n      <td>Japan</td>\n      <td>Asia</td>\n      <td>36.204824</td>\n      <td>138.252924</td>\n    </tr>\n    <tr>\n      <th>UOL Group</th>\n      <td>1996</td>\n      <td>0.9</td>\n      <td>0.7</td>\n      <td>7.8</td>\n      <td>4.2</td>\n      <td>Singapore</td>\n      <td>Asia</td>\n      <td>1.352083</td>\n      <td>103.819836</td>\n    </tr>\n    <tr>\n      <th>Interconexion Electrica</th>\n      <td>1998</td>\n      <td>2.4</td>\n      <td>0.2</td>\n      <td>14.6</td>\n      <td>5.8</td>\n      <td>Colombia</td>\n      <td>South America</td>\n      <td>4.570868</td>\n      <td>-74.297333</td>\n    </tr>\n    <tr>\n      <th>Old Republic International</th>\n      <td>1999</td>\n      <td>5.0</td>\n      <td>-0.1</td>\n      <td>16.2</td>\n      <td>3.3</td>\n      <td>USA</td>\n      <td>North America</td>\n      <td>37.090240</td>\n      <td>-95.712891</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Visual Summary\n\nlet us use seaborn pairplot() function to create a summary picture of the data using all variables, colored by country.\n\n::: {.cell execution_count=7}\n```` { .cell-code}\n```{{python}}\n#| fig-cap: \"Pairs plots for the Variables (A)\"\nsns.pairplot(company[['country', 'continent', 'sales', 'profits', 'assets', 'market_value']], hue = \"continent\", corner = True, palette = \"Dark2\", kind = \"scatter\")\n```\n\n````\n\n::: {.cell-output .cell-output-display}\n![Pairs plots for the Variables (A)](top_companies_files/figure-html/cell-8-output-1.png){width=1100 height=945}\n:::\n:::\n\n\n::: {.cell execution_count=8}\n```` { .cell-code}\n```{{python}}\n#| fig-cap: \"Pairs plots for the Variables (B)\"\nsns.pairplot(company[['country', 'continent', 'sales', 'profits', 'assets', 'market_value']], hue = \"continent\", corner = True, palette = \"Dark2\", kind = \"kde\")\n```\n\n````\n\n::: {.cell-output .cell-output-display}\n![Pairs plots for the Variables (B)](top_companies_files/figure-html/cell-9-output-1.png){width=1100 height=945}\n:::\n:::\n\n\n## Variable Types\n\nThe variable types are also an important data component.\n\n::: {.cell execution_count=9}\n```` { .cell-code}\n```{{python}}\ncompany.info()\n```\n\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nIndex: 1924 entries, ICBC to Old Republic International\nData columns (total 9 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   rank          1924 non-null   int64  \n 1   sales         1924 non-null   float64\n 2   profits       1924 non-null   float64\n 3   assets        1924 non-null   float64\n 4   market_value  1924 non-null   float64\n 5   country       1924 non-null   object \n 6   continent     1924 non-null   object \n 7   latitude      1924 non-null   float64\n 8   longitude     1924 non-null   float64\ndtypes: float64(6), int64(1), object(2)\nmemory usage: 214.9+ KB\n```\n:::\n:::\n\n\n::: {.cell execution_count=10}\n```` { .cell-code}\n```{{python}}\ncompany.dtypes\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\nrank              int64\nsales           float64\nprofits         float64\nassets          float64\nmarket_value    float64\ncountry          object\ncontinent        object\nlatitude        float64\nlongitude       float64\ndtype: object\n```\n:::\n:::\n\n\n## Missing Values\n\nLet us check the data for any missing values for sales, profits, assets, market_value, longitude, and latitude.\n\n::: {.cell execution_count=11}\n```` { .cell-code}\n```{{python}}\ncompany[company['sales'].isna()]\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>rank</th>\n      <th>sales</th>\n      <th>profits</th>\n      <th>assets</th>\n      <th>market_value</th>\n      <th>country</th>\n      <th>continent</th>\n      <th>latitude</th>\n      <th>longitude</th>\n    </tr>\n    <tr>\n      <th>Company</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=12}\n```` { .cell-code}\n```{{python}}\ncompany[company['profits'].isna()]\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>rank</th>\n      <th>sales</th>\n      <th>profits</th>\n      <th>assets</th>\n      <th>market_value</th>\n      <th>country</th>\n      <th>continent</th>\n      <th>latitude</th>\n      <th>longitude</th>\n    </tr>\n    <tr>\n      <th>Company</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=13}\n```` { .cell-code}\n```{{python}}\ncompany[company['assets'].isna()]\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>rank</th>\n      <th>sales</th>\n      <th>profits</th>\n      <th>assets</th>\n      <th>market_value</th>\n      <th>country</th>\n      <th>continent</th>\n      <th>latitude</th>\n      <th>longitude</th>\n    </tr>\n    <tr>\n      <th>Company</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=14}\n```` { .cell-code}\n```{{python}}\ncompany[company['market_value'].isna()]\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>rank</th>\n      <th>sales</th>\n      <th>profits</th>\n      <th>assets</th>\n      <th>market_value</th>\n      <th>country</th>\n      <th>continent</th>\n      <th>latitude</th>\n      <th>longitude</th>\n    </tr>\n    <tr>\n      <th>Company</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=15}\n```` { .cell-code}\n```{{python}}\ncompany[company['longitude'].isna()]\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>rank</th>\n      <th>sales</th>\n      <th>profits</th>\n      <th>assets</th>\n      <th>market_value</th>\n      <th>country</th>\n      <th>continent</th>\n      <th>latitude</th>\n      <th>longitude</th>\n    </tr>\n    <tr>\n      <th>Company</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=16}\n```` { .cell-code}\n```{{python}}\ncompany[company['latitude'].isna()]\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>rank</th>\n      <th>sales</th>\n      <th>profits</th>\n      <th>assets</th>\n      <th>market_value</th>\n      <th>country</th>\n      <th>continent</th>\n      <th>latitude</th>\n      <th>longitude</th>\n    </tr>\n    <tr>\n      <th>Company</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThis is a conveniently clean data without missing values which is a rare occurrence in data science.\n\n## Summary Statistics\n\nWe use the describe method to make summary statistics for numeric and character variables separately.\n\n::: {.cell execution_count=17}\n```` { .cell-code}\n```{{python}}\ncompany.describe(include = \"float64\")\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sales</th>\n      <th>profits</th>\n      <th>assets</th>\n      <th>market_value</th>\n      <th>latitude</th>\n      <th>longitude</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1924.000000</td>\n      <td>1924.000000</td>\n      <td>1924.000000</td>\n      <td>1924.000000</td>\n      <td>1924.000000</td>\n      <td>1924.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>19.265904</td>\n      <td>1.226040</td>\n      <td>79.507796</td>\n      <td>19.558160</td>\n      <td>34.618747</td>\n      <td>15.455664</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>34.683911</td>\n      <td>3.413831</td>\n      <td>261.098775</td>\n      <td>32.957023</td>\n      <td>18.259499</td>\n      <td>92.639655</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>-24.500000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>-40.900557</td>\n      <td>-106.346771</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>4.100000</td>\n      <td>0.300000</td>\n      <td>9.675000</td>\n      <td>5.300000</td>\n      <td>35.861660</td>\n      <td>-95.712891</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>9.000000</td>\n      <td>0.600000</td>\n      <td>19.250000</td>\n      <td>9.600000</td>\n      <td>37.090240</td>\n      <td>10.451526</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>18.425000</td>\n      <td>1.200000</td>\n      <td>45.800000</td>\n      <td>19.200000</td>\n      <td>40.463667</td>\n      <td>105.318756</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>469.200000</td>\n      <td>44.900000</td>\n      <td>3226.200000</td>\n      <td>416.600000</td>\n      <td>61.924110</td>\n      <td>174.885971</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nWe also do the same for string data types.\n\n::: {.cell execution_count=18}\n```` { .cell-code}\n```{{python}}\ncompany.describe(include = \"object\")\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>continent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1924</td>\n      <td>1924</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>60</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>USA</td>\n      <td>Asia</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>535</td>\n      <td>719</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nHere we see that there are 1924 observations with 60 unique countries across 6 continents. The country with the most companies is the USA (535), while the continent with the most companies is Asia (719).\n\n# Analysis\n\nIn this section, we explore some key issues from the data, listed in order.\n\n## **Which Companies are the Best Performing in the Sample Data?**\n\nWe start by examining sales. Wal-mart and Shell lead the pack in this case. Overall petroleum companies and motor vehicle manufacturing companies do very well. \n\n::: {.cell execution_count=19}\n```` { .cell-code}\n```{{python}}\ncompany.nlargest(10, \"sales\")[\"sales\"]\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\nCompany\nWal-Mart Stores            469.2\nRoyal Dutch Shell          467.2\nExxon Mobil                420.7\nSinopec-China Petroleum    411.7\nBP                         370.9\nPetroChina                 308.9\nVolkswagen Group           254.0\nTotal                      240.5\nToyota Motor               224.5\nChevron                    222.6\nName: sales, dtype: float64\n```\n:::\n:::\n\n\nIn terms of profits, Exxon Mobil and Apple come up tops.\n\n::: {.cell execution_count=20}\n```` { .cell-code}\n```{{python}}\ncompany.nlargest(10, \"profits\")[\"profits\"]\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\nCompany\nExxon Mobil                   44.9\nApple                         41.7\nGazprom                       40.6\nICBC                          37.8\nChina Construction Bank       30.6\nVolkswagen Group              28.6\nRoyal Dutch Shell             26.6\nChevron                       26.2\nAgricultural Bank of China    23.0\nBank of China                 22.1\nName: profits, dtype: float64\n```\n:::\n:::\n\n\nApple tops the ranking of most valuable company followed by Exxon Mobil and Google. \n\n::: {.cell execution_count=21}\n```` { .cell-code}\n```{{python}}\ncompany.nlargest(10, \"market_value\")[\"market_value\"]\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\nCompany\nApple                 416.6\nExxon Mobil           400.4\nGoogle                268.4\nPetroChina            261.2\nBerkshire Hathaway    252.8\nGeneral Electric      243.7\nWal-Mart Stores       242.5\nIBM                   239.5\nICBC                  237.3\nMicrosoft             234.8\nName: market_value, dtype: float64\n```\n:::\n:::\n\n\n## Which Countries and Continents Have the Highest Concentration of Large Companies?\n\nIn this section, we utilize the global rank in size variable to identify the countries and continents with the highest number of top-ranking companies. We see that companies from USA, Japan, China, UK, Canada, and South Korea dominate the rankings. Note that these are countries mainly from North America and Asia (with the exception of the UK) which illustrates the dominance of these two continents in global trade.\n\n::: {.cell execution_count=22}\n```` { .cell-code}\n```{{python}}\ncompany['country'].value_counts()\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=22}\n```\nUSA                     535\nJapan                   246\nChina                   135\nUK                       97\nCanada                   65\nSouth Korea              64\nFrance                   64\nIndia                    56\nGermany                  50\nHong Kong                46\nAustralia                42\nTaiwan                   40\nBrazil                   31\nRussia                   30\nItaly                    29\nSpain                    28\nSweden                   26\nThe Netherlands          24\nSingapore                20\nMalaysia                 20\nSouth Africa             19\nMexico                   19\nSaudi Arabia             17\nIreland                  17\nThailand                 16\nTurkey                   14\nUnited Arab Emirates     14\nFinland                  12\nBelgium                  11\nNorway                   10\nDenmark                  10\nIsrael                   10\nGreece                   10\nIndonesia                 9\nChile                     9\nBermuda                   9\nPhilippines               8\nQatar                     8\nPoland                    8\nLuxembourg                7\nColombia                  6\nPortugal                  6\nKuwait                    4\nHungary                   2\nPeru                      2\nMorocco                   2\nKazakhstan                2\nEgypt                     2\nLebanon                   2\nPakistan                  1\nVietnam                   1\nChannel Islands           1\nOman                      1\nNigeria                   1\nJordan                    1\nLiberia                   1\nVenezuela                 1\nPanama                    1\nCzech Republic            1\nNew Zealand               1\nName: country, dtype: int64\n```\n:::\n:::\n\n\nJust to confirm, let us see the concentration of companies by continent.\n\n::: {.cell execution_count=23}\n```` { .cell-code}\n```{{python}}\ncompany['continent'].value_counts()\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=23}\n```\nAsia             719\nNorth America    629\nEurope           459\nSouth America     49\nOceania           43\nAfrica            25\nName: continent, dtype: int64\n```\n:::\n:::\n\n\nWe then visualize this information on a world map using latitude and longitude data to show the geographic distribution of these companies. The size of the dots represents profits. We find that while there are the profitable companies are mainly in Asia, Europe, and North America. The rest of the world generates very few profits.\n\n::: {.cell execution_count=24}\n```` { .cell-code}\n```{{python}}\n# Create a GeoDataFrame\ngeometry = [Point(lon, lat) for lon, lat in zip(company['longitude'], company['latitude'])]\ngdf = gpd.GeoDataFrame(company, geometry=geometry, columns=['company', 'sales', 'profits', 'assets'])\n```\n\n````\n:::\n\n\n::: {.cell execution_count=25}\n```` { .cell-code}\n```{{python}}\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n```\n\n````\n:::\n\n\n::: {.cell execution_count=26}\n```` { .cell-code}\n```{{python}}\n#| fig-cap: \"Top Companies by Sales on a World Map\"\n# Create a subplot\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Plot the world map\nworld.boundary.plot(ax=ax, color = \"lightgrey\")\n\n# Plot your data on the map\ngdf.plot(ax=ax, marker='o', color='red', markersize='profits', label='Companies')\n\n# Add labels and legend\nax.set_title('Top Companies by Profits on World Map')\nax.set_xlabel('Longitude')\nax.set_ylabel('Latitude')\nax.legend()\n\nplt.show()\n```\n\n````\n\n::: {.cell-output .cell-output-display}\n![Top Companies by Sales on a World Map](top_companies_files/figure-html/cell-27-output-1.png){width=819 height=439}\n:::\n:::\n\n\n## Is There a Correlation Between Company Size (in terms of assets) and Financial Performance?\n\nHere, we analyze the relationship between the asset base of companies, which is a proxy for size and financial metrics such as sales, profits, and market value. The goal is to determine if larger companies tend to have higher sales, profits, and market value, or if there are exceptions. Overall, there appears to be a positive link between the size of a company and its financial performance in terms of sales, profits, and market value. However, this relationship varies by continent.\n\n::: {.cell execution_count=27}\n```` { .cell-code}\n```{{python}}\n#| fig-cap: \"Pairs plots for the Variables (C)\"\nsns.pairplot(company[[\"continent\", \"assets\", \"sales\", \"profits\", \"market_value\"]], hue = \"continent\")\n```\n\n````\n\n::: {.cell-output .cell-output-display}\n![Pairs plots for the Variables (C)](top_companies_files/figure-html/cell-28-output-1.png){width=1100 height=945}\n:::\n:::\n\n\n::: {.cell execution_count=28}\n```` { .cell-code}\n```{{python}}\ncompany[[\"assets\", \"sales\", \"profits\", \"market_value\"]].corr()\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=28}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>assets</th>\n      <th>sales</th>\n      <th>profits</th>\n      <th>market_value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>assets</th>\n      <td>1.000000</td>\n      <td>0.356069</td>\n      <td>0.356553</td>\n      <td>0.375544</td>\n    </tr>\n    <tr>\n      <th>sales</th>\n      <td>0.356069</td>\n      <td>1.000000</td>\n      <td>0.594174</td>\n      <td>0.649493</td>\n    </tr>\n    <tr>\n      <th>profits</th>\n      <td>0.356553</td>\n      <td>0.594174</td>\n      <td>1.000000</td>\n      <td>0.788853</td>\n    </tr>\n    <tr>\n      <th>market_value</th>\n      <td>0.375544</td>\n      <td>0.649493</td>\n      <td>0.788853</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Are There Regional Patterns in Company Performance Based on Continent?\n\nIn this section, I group the data by continent and analyze the average sales, profits, and assets for companies in each continent. North America and Asia have the highest sales and profits. In terms of asset base, companies in Europe and North America lead. This implies that companies in North America are more efficient in converting their sales and assets into profits.\n\n::: {.cell execution_count=29}\n```` { .cell-code}\n```{{python}}\n#| fig-cap: \"Sales by Companies\"\ncompany.groupby(\"continent\")[\"sales\"].sum().sort_values().plot(kind = \"barh\", title = \"Total Sales of Top 2000 Companies globally by Continent\")\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=29}\n```\n<AxesSubplot:title={'center':'Total Sales of Top 2000 Companies globally by Continent'}, ylabel='continent'>\n```\n\nSales by Companies\n:::\n\n::: {.cell-output .cell-output-display}\n![](top_companies_files/figure-html/cell-30-output-2.png){width=666 height=431}\n:::\n:::\n\n\n::: {.cell execution_count=30}\n```` { .cell-code}\n```{{python}}\n#| fig-cap: \"Total Profits of Top 2000 Companies globally by Continent\"\ncompany.groupby(\"continent\")[\"profits\"].sum().sort_values().plot(kind = \"barh\", title = \"Total Profits of Top 2000 Companies globally by Continent\")\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=30}\n```\n<AxesSubplot:title={'center':'Total Profits of Top 2000 Companies globally by Continent'}, ylabel='continent'>\n```\n\nTotal Profits of Top 2000 Companies globally by Continent\n:::\n\n::: {.cell-output .cell-output-display}\n![](top_companies_files/figure-html/cell-31-output-2.png){width=676 height=431}\n:::\n:::\n\n\n::: {.cell execution_count=31}\n```` { .cell-code}\n```{{python}}\n#| fig-cap: \"Total Assets of Top 2000 Companies globally by Continent\"\ncompany.groupby(\"continent\")[\"assets\"].sum().sort_values().plot(kind = \"barh\", title = \"Total Assets of Top 2000 Companies globally by Continent\")\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=31}\n```\n<AxesSubplot:title={'center':'Total Assets of Top 2000 Companies globally by Continent'}, ylabel='continent'>\n```\n\nTotal Assets of Top 2000 Companies globally by Continent\n:::\n\n::: {.cell-output .cell-output-display}\n![](top_companies_files/figure-html/cell-32-output-2.png){width=666 height=431}\n:::\n:::\n\n\n## Which Companies, Contiments have the Highest Returns on Assets and Profit margins?\n\nThe return on assets is the ratio of profits to assets and captures the efficiency with which a company utilises its assets to generate profits. The net profit margin also captures how well a company is able to convert its sales into profits. The margin can also proxy the management efforts towards expenses management.\n\nCarphone Warehouse with a return on assets of 1 means that it generated profits equivalent to its assets base. This is phenomenal!! The companies in the top 5 all have a return greater than 30%, which is an exceptional performance.\n\n::: {.cell execution_count=32}\n```` { .cell-code}\n```{{python}}\ncompany[\"roa\"] = company[\"profits\"] / company[\"assets\"]\ncompany[\"margin\"] = company[\"profits\"] / company[\"sales\"]\n```\n\n````\n:::\n\n\n::: {.cell execution_count=33}\n```` { .cell-code}\n```{{python}}\ncompany['roa'].sort_values(ascending = False).head()\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=33}\n```\nCompany\nCarphone Warehouse           1.000000\nRegeneron Pharmaceuticals    0.470588\nAlexander's                  0.466667\nSaudi Arabian Fertilizers    0.370370\nSeagate Technology           0.367816\nName: roa, dtype: float64\n```\n:::\n:::\n\n\nNext, I compute the median ROA for each continent. Africa leads, though the continent has very few companies in the sample. North America is in second place, which implies that the companies in this continent are very efficient in utilizing assets to generate profits.\n\n::: {.cell execution_count=34}\n```` { .cell-code}\n```{{python}}\ncompany.groupby(\"continent\")['roa'].median().sort_values(ascending = False)\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=34}\n```\ncontinent\nAfrica           0.063492\nNorth America    0.046512\nOceania          0.046512\nEurope           0.034483\nSouth America    0.024590\nAsia             0.021583\nName: roa, dtype: float64\n```\n:::\n:::\n\n\nLet us do the same for profit margin. The companies in the top 5 have ratios greater than 1 which implies they generated profits greater than the sales. This is cause for concern especially for Carphone Warehouse which appears to have generated profits from zero sales.\n\n::: {.cell execution_count=35}\n```` { .cell-code}\n```{{python}}\ncompany['margin'].sort_values(ascending = False).head()\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=35}\n```\nCompany\nCarphone Warehouse         inf\nHysan Development     4.333333\nIndustrivarden        4.250000\nAlexander's           3.500000\nChinese Estates       3.250000\nName: margin, dtype: float64\n```\n:::\n:::\n\n\nAfrica leads in median profit margin. Again this could be die to the low number of companies from the continent in this sample. Oceania and North America follow in that order. Europe does poorly.\n\n::: {.cell execution_count=36}\n```` { .cell-code}\n```{{python}}\ncompany.groupby(\"continent\")['margin'].median().sort_values(ascending = False)\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=36}\n```\ncontinent\nAfrica           0.139423\nOceania          0.107143\nNorth America    0.090909\nSouth America    0.083333\nAsia             0.072289\nEurope           0.060185\nName: margin, dtype: float64\n```\n:::\n:::\n\n\n# **Conclusion**\n\nIn this analysis, we use data from Kagle to illustrate the use of Python and Pandas in data analysis. From the analysis, we find that;\n\n1.  Most large companies in the sample are located in the United States.\n2.  The continent with the highest number of large companies is Asia.\n3.  There is a positive relationship between company size and financial performance. However, this relationship varies across continents.\n4.  Companies from North America and Asia have the highest sales and profits.\n5.  Companies from Europe and Asia have the highest asset base.\n6.  Companies in Africa and North America are more efficient in converting sales and assets into profits.\n\n# **References** {.unnumbered}\n\n",
    "supporting": [
      "top_companies_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}